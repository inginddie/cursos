pwd
para saber en que carpeta estas
cd /
para ir al home
ls
para identificar que archivos estan en la carpeta
ls -al
muestra todos los archivos hasta los ocultos
ls -l
lista los archivos menos ocultos
clear
limpiar la consola o se puede con las teclas (CRL l)
cd /c
ingresa al disco c
mkdir carpeta
crear una carpeta significa (make director)
touch (nombre archivo ejemplo: vaciotxt)
para crear archivos con extension
cat
te muestra lo que tiene el archivo escrito
rm  (nombre archivo ejemplo: vaciotxt)
elimina el archivo de la carpeta


GIT
git add
enviar el o los documentos a staging
git commit -m 'que fue el cambio'
cuando se envia a master
git checkout
cuando se actualiza el repositorio local
git init
para crear un nuevo proyecto
git status
ver que archivos estan sin merge

si por error se sube pero deseas eliminarlo
git rm --cached (archivo)
git status
y ya puedes volver hacer
git add (archivo)
git commit -m "version"

si deseo ver los hash y versiones del archivo
git show
git log
git log --oneline 
git log --stat ( para ver cuantos commit estan por archivo)


si deseo cambiar la version
git reset (hash version) --hard

COnfigurar git
git config --list
ver listado configuración por defecto
git config --list --show--origin
ver archivos de configuración enlistados
git config --global user.name "diego bustos"
cambiar el usuario
git config --global user.mail "diego bustos"
cambiar el correo

Cuando deseo realizar un commit a un archivo que ya tiene una versión
git commit -am  "xxxx"

deseas eliminar los archivos hasta del disco
git rm --force

git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt

git@github.com:inginddie/icetex.git

Crear un nuevo brach
git checkout <rama>
git status

generar un merge de rama a fusionar
git merge master developer




